# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:28:06+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Error(BaseModel):
    code: Optional[str] = Field(None, examples=['103'])
    detail: Optional[str] = Field(None, examples=['Detailed error message'])
    status: Optional[str] = Field(None, examples=['400'])
    title: Optional[str] = Field(None, examples=['Error title'])


class APIError(BaseModel):
    errors: Optional[List[Error]] = None


class AuthorizationError(BaseModel):
    message: Optional[str] = Field(None, examples=['No API key found in request'])


class VeteranStatus(Enum):
    confirmed = 'confirmed'
    not_confirmed = 'not confirmed'


class VeteranStatusConfirmation(BaseModel):
    veteran_status: Optional[VeteranStatus] = Field(
        None,
        description='Whether the system could confirm the Veteran status of an individual based on traits\n',
    )


class Gender(Enum):
    M = 'M'
    F = 'F'


class VeteranStatusRequest(BaseModel):
    birth_date: str = Field(
        ...,
        description='Birth date for the person of interest in any valid ISO8601 format',
        examples=['1965-01-01'],
    )
    first_name: str = Field(
        ..., description='First name for the person of interest', examples=['John']
    )
    gender: Optional[Gender] = Field(
        None,
        description='Optional gender of M or F for the person of interest',
        examples=['M'],
    )
    last_name: str = Field(
        ..., description='Last name for the person of interest', examples=['Doe']
    )
    middle_name: Optional[str] = Field(
        None,
        description='Optional middle name for the person of interest',
        examples=['Theodore'],
    )
    ssn: str = Field(
        ...,
        description='Social Security Number for the person of interest with or without dashes',
        examples=['555-55-5555'],
    )
